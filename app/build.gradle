plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'jacoco'
}

android {
    namespace 'com.example.jacocoagptestapp'
    compileSdk 35

    defaultConfig {
        applicationId "com.example.jacocoagptestapp"
        minSdk 26
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            enableUnitTestCoverage true
            enableAndroidTestCoverage true
        }
    }
    kotlin {
        jvmToolchain(17)
    }
}

jacoco {
    toolVersion = '0.8.12'
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }

    sourceDirectories.setFrom("${project.projectDir}/src/main/java")
    classDirectories.setFrom(
            fileTree(dir: "${layout.buildDirectory.get()}/intermediates/javac/debug") +
            fileTree(dir: "${layout.buildDirectory.get()}/tmp/kotlin-classes/debug")
    )

    executionData.setFrom(
            files([
                    "${layout.buildDirectory.get()}/outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec",
                    fileTree(dir: "${layout.buildDirectory.get()}/outputs/code_coverage/debugAndroidTest/connected/", includes: ["**/*.ec"])
            ])
    )
}

dependencies {

    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}
